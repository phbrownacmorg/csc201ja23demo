import Tkinter as tk
from _typeshed import Incomplete

class GraphicsError(Exception): ...

OBJ_ALREADY_DRAWN: str
UNSUPPORTED_METHOD: str
BAD_OPTION: str

def update(rate: float | None = ...) -> None: ...

class GraphWin(tk.Canvas):
    foreground: str
    items: Incomplete
    mouseX: Incomplete
    mouseY: Incomplete
    height: Incomplete
    width: Incomplete
    autoflush: Incomplete
    trans: Incomplete
    closed: bool
    lastKey: str
    def __init__(self, title: str = ..., width: int = ..., height: int = ..., autoflush: bool = ...) -> None: ...
    def setBackground(self, color) -> None: ...
    def setCoords(self, x1, y1, x2, y2) -> None: ...
    def close(self) -> None: ...
    def isClosed(self): ...
    def isOpen(self): ...
    def plot(self, x, y, color: str = ...) -> None: ...
    def plotPixel(self, x, y, color: str = ...) -> None: ...
    def flush(self) -> None: ...
    def getMouse(self): ...
    def checkMouse(self): ...
    def getKey(self): ...
    def checkKey(self): ...
    def getHeight(self): ...
    def getWidth(self): ...
    def toScreen(self, x, y): ...
    def toWorld(self, x, y): ...
    def setMouseHandler(self, func) -> None: ...
    def addItem(self, item) -> None: ...
    def delItem(self, item) -> None: ...
    def redraw(self) -> None: ...

class Transform:
    xbase: Incomplete
    ybase: Incomplete
    xscale: Incomplete
    yscale: Incomplete
    def __init__(self, w, h, xlow, ylow, xhigh, yhigh) -> None: ...
    def screen(self, x, y): ...
    def world(self, xs, ys): ...

DEFAULT_CONFIG: Incomplete

class GraphicsObject:
    canvas: Incomplete
    id: Incomplete
    config: Incomplete
    def __init__(self, options) -> None: ...
    def setFill(self, color) -> None: ...
    def setOutline(self, color) -> None: ...
    def setWidth(self, width) -> None: ...
    def draw(self, graphwin): ...
    def undraw(self) -> None: ...
    def move(self, dx, dy) -> None: ...

class Point(GraphicsObject):
    setFill: Incomplete
    x: Incomplete
    y: Incomplete
    def __init__(self, x, y) -> None: ...
    def clone(self): ...
    def getX(self): ...
    def getY(self): ...

class _BBox(GraphicsObject):
    p1: Incomplete
    p2: Incomplete
    def __init__(self, p1, p2, options=...) -> None: ...
    def getP1(self): ...
    def getP2(self): ...
    def getCenter(self): ...

class Rectangle(_BBox):
    def __init__(self, p1, p2) -> None: ...
    def clone(self): ...

class Oval(_BBox):
    def __init__(self, p1, p2) -> None: ...
    def clone(self): ...

class Circle(Oval):
    radius: Incomplete
    def __init__(self, center, radius) -> None: ...
    def clone(self): ...
    def getRadius(self): ...

class Line(_BBox):
    setOutline: Incomplete
    def __init__(self, p1, p2) -> None: ...
    def clone(self): ...
    def setArrow(self, option) -> None: ...

class Polygon(GraphicsObject):
    points: Incomplete
    def __init__(self, *points) -> None: ...
    def clone(self): ...
    def getPoints(self): ...

class Text(GraphicsObject):
    anchor: Incomplete
    setOutline: Incomplete
    def __init__(self, p, text) -> None: ...
    def clone(self): ...
    def setText(self, text) -> None: ...
    def getText(self): ...
    def getAnchor(self): ...
    def setFace(self, face) -> None: ...
    def setSize(self, size) -> None: ...
    def setStyle(self, style) -> None: ...
    def setTextColor(self, color) -> None: ...

class Entry(GraphicsObject):
    anchor: Incomplete
    width: Incomplete
    text: Incomplete
    fill: str
    color: str
    font: Incomplete
    entry: Incomplete
    def __init__(self, p, width) -> None: ...
    def getText(self): ...
    def getAnchor(self): ...
    def clone(self): ...
    def setText(self, t) -> None: ...
    def setFill(self, color) -> None: ...
    def setFace(self, face) -> None: ...
    def setSize(self, size) -> None: ...
    def setStyle(self, style) -> None: ...
    def setTextColor(self, color) -> None: ...

class Image(GraphicsObject):
    idCount: int
    imageCache: Incomplete
    anchor: Incomplete
    imageId: Incomplete
    img: Incomplete
    def __init__(self, p, *pixmap) -> None: ...
    def undraw(self) -> None: ...
    def getAnchor(self): ...
    def clone(self): ...
    def getWidth(self): ...
    def getHeight(self): ...
    def getPixel(self, x, y): ...
    def setPixel(self, x, y, color) -> None: ...
    def save(self, filename) -> None: ...

def color_rgb(r: int, g: int, b: int) -> str: ...
def test() -> None: ...
